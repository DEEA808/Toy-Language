id=1
Stack:((v int);for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))print((e=1)))

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))print((e=1))
(v int)

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))print((e=1))
(v int)

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))print((e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))print((e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=0);while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))})

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=0);while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))})

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=(e=0)

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=(e=0)

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->0  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->0  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->1  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->1  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->2  ]
List:
1
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->2  ]
List:
1
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->3  ]
List:
1
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->3  ]
List:
1
1
1

FileTable:[]
Heap:[]

id=1
Stack:
Map[v->3  ]
List:
1
1
1

FileTable:[]
Heap:[]

id=1
Stack:((v int);for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))print((e=1)))

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))print((e=1))
(v int)

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))print((e=1))
(v int)

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))print((e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))print((e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=0);while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))})

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=0);while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))})

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=(e=0)

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=(e=0)

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->0  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->0  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->1  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->1  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
(print((e=1));v=((id=v)+(e=1)))

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
print((e=1))

Map[v->2  ]
List:
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->2  ]
List:
1
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->2  ]
List:
1
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->3  ]
List:
1
1
1

FileTable:[]
Heap:[]

id=1
Stack:while(((id=v)<=(e=3))){(print((e=1));v=((id=v)+(e=1)))}

Map[v->3  ]
List:
1
1
1

FileTable:[]
Heap:[]

id=1
Stack:
Map[v->3  ]
List:
1
1
1

FileTable:[]
Heap:[]

id=1
Stack:((v int);(v=(e=20);(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10))))))

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=20);(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10)))))
(v int)

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=20);(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10)))))
(v int)

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=20);(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10)))))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=20);(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10)))))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10))))
v=(e=20)

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10))))
v=(e=20)

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10))))

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10))))

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))))

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))))

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
(v=(e=0);while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))})

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
(v=(e=0);while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))})

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=(e=0)

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=(e=0)

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
fork((print((id=v));v=((id=v)+(e=1))))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
fork((print((id=v));v=((id=v)+(e=1))))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:(print((id=v));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:(print((id=v));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->1  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:v=((id=v)+(e=1))
print((id=v))

Map[v->1  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->1  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:v=((id=v)+(e=1))
print((id=v))

Map[v->1  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:v=((id=v)+(e=1))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:v=((id=v)+(e=1))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
fork((print((id=v));v=((id=v)+(e=1))))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:
Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
fork((print((id=v));v=((id=v)+(e=1))))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:(print((id=v));v=((id=v)+(e=1)))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:(print((id=v));v=((id=v)+(e=1)))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->3  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:v=((id=v)+(e=1))
print((id=v))

Map[v->3  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->3  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:v=((id=v)+(e=1))
print((id=v))

Map[v->3  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))

Map[v->3  ]
List:
1
3

FileTable:[]
Heap:[]

id=3
Stack:v=((id=v)+(e=1))

Map[v->3  ]
List:
1
3

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))

Map[v->3  ]
List:
1
3

FileTable:[]
Heap:[]

id=3
Stack:v=((id=v)+(e=1))

Map[v->3  ]
List:
1
3

FileTable:[]
Heap:[]

id=3
Stack:
Map[v->4  ]
List:
1
3
13

FileTable:[]
Heap:[]

id=3
Stack:
Map[v->4  ]
List:
1
3
13

FileTable:[]
Heap:[]

id=1
Stack:((v int);(v=(e=20);(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10))))))

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=20);(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10)))))
(v int)

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=20);(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10)))))
(v int)

Map[]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=20);(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10)))))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(v=(e=20);(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10)))))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10))))
v=(e=20)

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10))))
v=(e=20)

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10))))

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:(for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))));print(((id=v)+(e=10))))

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))))

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
for(v=(e=0);v<(e=3);v=((id=v)+(e=1)))fork((print((id=v));v=((id=v)+(e=1))))

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
(v=(e=0);while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))})

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
(v=(e=0);while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))})

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=(e=0)

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=(e=0)

Map[v->20  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
fork((print((id=v));v=((id=v)+(e=1))))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=1
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
fork((print((id=v));v=((id=v)+(e=1))))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:(print((id=v));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:(print((id=v));v=((id=v)+(e=1)))

Map[v->0  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->1  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:v=((id=v)+(e=1))
print((id=v))

Map[v->1  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->1  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:v=((id=v)+(e=1))
print((id=v))

Map[v->1  ]
List:

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:v=((id=v)+(e=1))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:v=((id=v)+(e=1))

Map[v->1  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
fork((print((id=v));v=((id=v)+(e=1))))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:
Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=2
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))
fork((print((id=v));v=((id=v)+(e=1))))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:(print((id=v));v=((id=v)+(e=1)))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}
v=((id=v)+(e=1))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:(print((id=v));v=((id=v)+(e=1)))

Map[v->2  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->3  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:v=((id=v)+(e=1))
print((id=v))

Map[v->3  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))
while(((id=v)<=(e=3))){(fork((print((id=v));v=((id=v)+(e=1))));v=((id=v)+(e=1)))}

Map[v->3  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:v=((id=v)+(e=1))
print((id=v))

Map[v->3  ]
List:
1

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))

Map[v->3  ]
List:
1
3

FileTable:[]
Heap:[]

id=3
Stack:v=((id=v)+(e=1))

Map[v->3  ]
List:
1
3

FileTable:[]
Heap:[]

id=3
Stack:print(((id=v)+(e=10)))

Map[v->3  ]
List:
1
3

FileTable:[]
Heap:[]

id=3
Stack:v=((id=v)+(e=1))

Map[v->3  ]
List:
1
3

FileTable:[]
Heap:[]

id=3
Stack:
Map[v->4  ]
List:
1
3
13

FileTable:[]
Heap:[]

id=3
Stack:
Map[v->4  ]
List:
1
3
13

FileTable:[]
Heap:[]

